//
//  resources.cpp
//  ChromaGrid
//
//  Created by Fredrik on 2024-03-01.
//

#include "resources.hpp"
#include "game.hpp"
#include "iffstream.hpp"

static void remap_to(color_e col, canvas_c::remap_table_t table, uint8_t masked_idx = image_c::MASKED_CIDX) {
    switch (col) {
        case color_e::gold:
            table[0] = 1;
            table[2] = 1;
            table[7] = 9;
            table[10] = 14;
            break;
        case color_e::silver:
            table[0] = 2;
            table[2] = 2;
            table[7] = 8;
            table[10] = 13;
            break;
        default:
            break;
    }
    table[masked_idx] = image_c::MASKED_CIDX;
}

cgresources_c& cgresources_c::shared() {
    static cgresources_c *rsc = nullptr;
    if (rsc == nullptr) {
        rsc = new cgresources_c();
    }
    return *rsc;
}

static const char *data_path(const char *file, const char *m = nullptr) {
    static char buffer[256];
    if (m) {
        printf("%s\n\r", m);
    }
#ifdef __M68000__
    strcpy(buffer, "data\\");
#else
    strcpy(buffer, "");
#endif
    strcat(buffer, file);
    return buffer;
}

static const char *user_path(const char *file, const char *m = nullptr) {
#ifdef __M68000__
    return file;
#else
    static char buffer[256];
    strcpy(buffer, "/tmp/");
    strcat(buffer, file);
    return buffer;
#endif
}


cgresources_c::cgresources_c() :
    background(data_path("BACKGRND.IFF", "Load images"), false),
    tiles(data_path("TILES.IFF"), false),
    empty_tile(data_path("emptyt.iff"), true, 6),
    orbs(data_path("ORBS.IFF"), true, 6),
    cursor(data_path("CURSOR.IFF"), true, 0),
    button(data_path("BUTTON.IFF"), true, 6),
    selection(data_path("SELECT.IFF"), true, 6),
    shimmer(data_path("shimmer.iff"), true, 6),
    font(new image_c(data_path("FONT.IFF", "Load fonts"), true, 0), size_s(8, 8), 4, 2, 4),
    mono_font(font.get_image(), size_s(8, 8)),
    small_font(new image_c(data_path("FONT6.IFF"), true, 0), size_s(6, 6), 3, 0, 6),
    small_mono_font(small_font.get_image(), size_s(6, 6)),
    drop_orb(data_path("drop.aif", "Load audio")),
    take_orb(data_path("take.aif")),
    fuse_orb(data_path("fuse.aif")),
    no_drop_orb(data_path("tock.aif")),
    break_tile(data_path("break.aif")),
    fuse_break_tile(data_path("fusebrk.aif")),
    music(data_path("music.snd", "Load music"))
{
    for (int x = 1; x < 3; x++) {
        canvas_c tiles_cnv(tiles);
        printf("Initialize tiles %d.\n\r", x);
        rect_s rect(x * 48, 0, 48, 80);
        tiles_cnv.draw(tiles, rect_s(0, 0, 48, 80), rect.origin);
        canvas_c::remap_table_t table;
        canvas_c::make_noremap_table(table);
        if (x == 1) {
            remap_to(color_e::gold, table);
        } else {
            remap_to(color_e::silver, table);
        }
        tiles_cnv.remap_colors(table, rect);
    }

    printf("Pre-warm stencils.\n\r");
    canvas_c::get_stencil(canvas_c::orderred, 0);
    
    printf("Loading user levels.\n\r");
    uint8_t *recipes = (uint8_t *)calloc(10, level_recipe_t::MAX_SIZE);
    for (int i = 0; i < 10; i++) {
        user_levels.push_back((level_recipe_t *)(recipes + i * level_recipe_t::MAX_SIZE));
    }
    load_user_levels();
    
    printf("Loading levels.\n\r");
    load_levels();
    load_level_results();
    /*
        // Make one, if we cannot load.
        level_recipe_t *recipe = (level_recipe_t *)calloc(1, sizeof(level_recipe_t) + sizeof(tilestate_t) * 4);
        recipe->header.width = 2;
        recipe->header.height = 2;
        recipe->header.time = 75;
        recipe->header.orbs[0] = 3;
        recipe->header.orbs[1] = 4;
        recipe->text = nullptr;
        recipe->tiles[0] = { tiletype_e::regular, color_e::none, color_e::none, color_e::none };
        recipe->tiles[1] = { tiletype_e::glass, color_e::gold, color_e::none, color_e::none };
        recipe->tiles[2] = { tiletype_e::blocked, color_e::none, color_e::none, color_e::none };
        recipe->tiles[3] = { tiletype_e::regular, color_e::silver, color_e::none, color_e::gold };
        levels.push_back(recipe);
    */
}

void cgresources_c::load_levels() {
    int i = 1;
    while (levels.size() < 45) {
        char buf[14];
        sprintf(buf, "levels%d.dat", i++);
        iffstream_c iff(data_path(buf), fstream_c::input);
        if (!iff.good()) {
            break;
        }
        iff.set_assert_on_error(true);
        iff_group_s list;
        iff.first(IFF_LIST, IFF_CGLV, list);
        uint8_t *data = (uint8_t *)calloc(1, list.size);
        iff_group_s level_group;
        while (levels.size() < 45 && iff.next(list, IFF_FORM, level_group)) {
            level_recipe_t *recipe = (level_recipe_t *)(data + iff.tell());
            recipe->load(iff, level_group);
            levels.emplace_back(recipe);
        }
    }
    assert(levels.size() > 0);
}

bool cgresources_c::load_user_levels() {
#if 0
    struct level_recipe_11_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[121][4]; };
    auto level_11 = (level_recipe_11_s){ {11, 11, 10, 10}, 150, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {3, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0},
      {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 2, 0, 0}, {4, 2, 0, 2}, {0, 2, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0},
      {3, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
    }};

    // Level 12 too large

    struct level_recipe_13_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[144][4]; };
    auto level_13 = (level_recipe_13_s){ {12, 12, 10, 10}, 150, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 2, 0, 2}, {4, 2, 0, 2}, {4, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {4, 2, 0, 2}, {4, 0, 0, 0}, {4, 0, 0, 0}, {4, 2, 0, 2}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {4, 2, 0, 2}, {4, 0, 0, 0}, {4, 0, 0, 0}, {4, 2, 0, 2}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 2, 0, 2}, {4, 2, 0, 2}, {4, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
    }};

    struct level_recipe_14_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[144][4]; };
    auto level_14 = (level_recipe_14_s){ {12, 12, 10, 10}, 180, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
    }};

    struct level_recipe_15_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[144][4]; };
    auto level_15 = (level_recipe_15_s){ {12, 12, 10, 10}, 150, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 2, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 1, 0, 1}, {0, 2, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {4, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
    }};

    // Level 16 too large

    // Level 17 too large

    // Level 18 too large

    // Level 19 too large

    struct level_recipe_20_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[132][4]; };
    auto level_20 = (level_recipe_20_s){ {11, 12, 10, 10}, 225, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {4, 1, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {4, 1, 0, 1}, {3, 0, 0, 0}, {4, 1, 0, 1}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0},
      {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0},
      {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {3, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 1, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
    }};

    // Level 21 too large

    // Level 22 too large

    // Level 23 too large

    // Level 24 too large

    // Level 25 too large

    // Level 26 too large

    // Level 27 too large

    struct level_recipe_28_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[81][4]; };
    auto level_28 = (level_recipe_28_s){ {9, 9, 10, 10}, 135, nullptr, {
      {0, 0, 0, 0}, {3, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 2, 0, 0}, {0, 0, 0, 0},
      {3, 1, 0, 0}, {3, 0, 0, 0}, {3, 1, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 2, 0, 0}, {3, 0, 0, 0}, {3, 2, 0, 0},
      {0, 0, 0, 0}, {3, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 2, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 1, 0, 1}, {4, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 2, 0, 0}, {4, 2, 0, 2}, {3, 0, 0, 0}, {4, 2, 0, 2}, {0, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 2, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 1, 0, 1}, {4, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {3, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 1, 0, 0}, {0, 0, 0, 0},
      {3, 2, 0, 0}, {3, 0, 0, 0}, {3, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 0}, {3, 1, 0, 0}, {3, 0, 0, 0}, {3, 1, 0, 0},
      {0, 0, 0, 0}, {3, 2, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 1, 0, 0}, {0, 0, 0, 0},
    }};

    struct level_recipe_29_s { uint8_t a[4]; uint16_t c; const char *ptr; uint8_t d[144][4]; };
    auto level_29 = (level_recipe_29_s){ {12, 12, 10, 10}, 180, nullptr, {
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 0, 0, 0}, {4, 0, 0, 0}, {4, 0, 0, 0}, {4, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {4, 2, 0, 2}, {3, 0, 0, 2}, {3, 0, 0, 0}, {3, 0, 0, 2}, {4, 2, 0, 2}, {4, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {4, 0, 0, 0}, {3, 0, 0, 2}, {3, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 2}, {4, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {4, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 2}, {4, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 0}, {3, 0, 0, 2}, {4, 2, 0, 2}, {4, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {4, 0, 0, 0}, {4, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 2, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0},
      {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0},
    }};

    memcpy(user_levels[0], &level_11, sizeof(level_11));
    memcpy(user_levels[1], &level_13, sizeof(level_13));
    memcpy(user_levels[2], &level_14, sizeof(level_14));
    memcpy(user_levels[3], &level_15, sizeof(level_15));
    memcpy(user_levels[4], &level_20, sizeof(level_20));
    memcpy(user_levels[5], &level_28, sizeof(level_28));
    memcpy(user_levels[6], &level_29, sizeof(level_29));

#else
    iffstream_c iff(user_path("levels.dat"), fstream_c::input);
    if (!iff.good()) {
        return false;
    }
    iff.set_assert_on_error(true);
    iff_group_s list;
    iff.first(IFF_LIST, IFF_CGLV, list);
    int index = 0;
    iff_group_s level_group;
    while (iff.next(list, IFF_FORM, level_group)) {
        auto recipe = user_levels[index++];
        recipe->load(iff, level_group);
    }
#endif
    return true;
}

bool cgresources_c::save_user_levels() {
    iffstream_c iff(user_path("levels.dat"), fstream_c::input | fstream_c::output);
    if (!iff.good()) {
        return false;
    }
    iff.set_assert_on_error(true);
    iff_group_s list;
    iff.begin(list, IFF_LIST);
    iff.write(&IFF_CGLV_ID);
    for (int index = 0; index < user_levels.size(); index++) {
        auto &recipe = user_levels[index];
        if (!recipe->empty()) {
            recipe->save(iff);
        }
    }
    iff.end(list);
    return true;
}

bool cgresources_c::load_level_results() {
    bool success = false;
    iffstream_c iff(user_path("scores.dat"));
    if (!iff.good()) goto done;
    iff_group_s list;
    if (iff.first(IFF_LIST, IFF_CGLR, list)) {
        iff_chunk_s level_chunk;
        while (iff.next(list, IFF_CGLR, level_chunk)) {
            level_results.emplace_back();
            auto &level_result = level_results.back();
            if (!level_result.load(iff, level_chunk)) {
                goto done;
            }
        }
    }
    success = level_results.size() <= levels.size();
done:
    if (!success) {
        level_results.clear();
    }
    while (level_results.size() < levels.size()) {
        level_results.emplace_back();
    }
    return success;
}

bool cgresources_c::save_level_results() {
    iffstream_c iff(user_path("scores.dat"), fstream_c::input | fstream_c::output);
    if (!iff.good()) {
        return false;
    }
    iff_group_s list;
    if (iff.begin(list, IFF_LIST)) {
        iff.write(&IFF_CGLR_ID);
        for (auto result = level_results.begin(); result != level_results.end(); result++) {
            result->save(iff);
        }
        return iff.end(list);
    }
    return false;
}
