#if !TOYBOX_TARGET_ATARI
#   error "For Atari target only"
#endif
|
| Primitive Interupt handlers.
|
    .extern _g_vbl_functions
    .extern _g_vbl_tick
    .extern _g_clock_functions
    .extern _g_clock_tick
    .extern _g_active_image
    .global _g_vbl_interupt
    .global _g_system_vbl_freq
    .global _g_system_vbl_interupt
    .global _g_clock_interupt
    .global _g_system_clock_interupt

    .extern _g_mouse_buttons
    .extern _g_mouse_position
    .global _g_mouse_interupt
    .global _g_system_mouse_interupt

    .global _g_microwire_write

    .struct
timer_func_next:        ds.l    1
timer_func_freq:        ds.b    1
timer_func_cnt:         ds.b    1
timer_func_func:        ds.l    1
timer_func_context:     ds.l    1

    .struct
image_vtable:           ds.l    1
image_palette:          ds.l    2
image_bitmap:           ds.l    1
image_maskmap:          ds.l    1
image_size:             ds.w    2
image_line_words:       ds.w    1


    .text

    .even
_g_vbl_interupt:
    movem.l d0-d2/a0-a2,-(sp)
    move.l  _g_active_image,d0
    beq.s   .no_active_image
    move.l  d0,a0
    move.l  image_bitmap(a0),d0   ||| MUST MATCH image_c::_bitmap offset!!!
    move.l  d0,0x044e.w           ||| Do not let TOS overrwite.
    move.b  d0,d1
    lsr.w #8,d0
    move.l  d0,0xffff8204.w
    move.b  d1,0xffff8209.w
.no_active_image:
    add.l   #1,_g_vbl_tick
    lea     _g_vbl_functions, a2
.next_func_v:
    move.l  timer_func_next(a2),d0
    beq.s   .no_more_funcs_v
    move.l  d0,a2
    move.b  timer_func_freq(a2),d0
    sub.b   d0,timer_func_cnt(a2)
    bcc.s   .no_call_v
    .dc.w    0x062a                       | add.b   #50,timer_func_cnt(a2)
_g_system_vbl_freq:
    .dc.w   0x32
    .dc.w   0x05
    move.l  timer_func_func(a2),a1
    move.l  timer_func_context(a2),a0
    jsr     (a1)
.no_call_v:
    add.l   #14,a2
    bra.s   .next_func_v
.no_more_funcs_v:
    movem.l (sp)+,d0-d2/a0-a2
    .dc.w    0x4ef9         | jmp $xxxxxxxx.l
_g_system_vbl_interupt:
    .dc.l    0x0

.even
_g_clock_interupt:
    movem.l d0-d2/a0-a2,-(sp)
#if TOYBOX_DEBUG_CPU
    move.w  0xffff8240.w,-(sp)
    move.w  #0x011,0xffff8240.w
#endif
    add.l   #1,_g_clock_tick
    lea     _g_clock_functions,a2
.next_func_c:
    move.l  timer_func_next(a2),d0
    beq.s   .no_more_funcs_c
    move.l  d0,a2
    move.b  timer_func_freq(a2),d0
    sub.b   d0,timer_func_cnt(a2)
    bcc.s   .no_call_c
    add.b   #200,timer_func_cnt(a2)
    move.l  timer_func_func(a2),a1
    move.l  timer_func_context(a2),a0
    jsr     (a1)
.no_call_c:
    add.l   #14,a2
    bra.s   .next_func_c
.no_more_funcs_c:
#if TOYBOX_DEBUG_CPU
    move.w  (sp)+,0xffff8240.w
#endif
    movem.l (sp)+,d0-d2/a0-a2
    .dc.w    0x4ef9         | jmp $xxxxxxxx.l
_g_system_clock_interupt:
    .dc.l    0x0

    .even
_g_mouse_interupt:
    move.w  d0, -(sp)
#if TOYBOX_DEBUG_CPU
    move.w  0xffff8240.w,-(sp)
    move.w  #0x101,0xffff8240.w
#endif
    move.b  (a0),d0
    and.b   #0x3,d0
    move.b  d0,_g_mouse_buttons
    move.b  1(a0),d0
    ext.w   d0
    add.w   d0,_g_mouse_position
    move.b  2(a0),d0
    ext.w   d0
    add.w   d0,_g_mouse_position+2
#if TOYBOX_DEBUG_CPU
    move.w  (sp)+,0xffff8240.w
#endif
    move.w  (sp)+,d0
    .dc.w    0x4ef9         | jmp $xxxxxxxx.l
_g_system_mouse_interupt:
    .dc.l    0x0

_g_microwire_write:
    move.w  #0x07ff,0xffff8924.w
    move.w  d0,0xffff8922.w
.wait:
    cmp.w   #0x07ff,0xffff8924.w
    bne.s   .wait
    move.w  d0,0xffff8922.w
    rts
